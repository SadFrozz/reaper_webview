name: Build WebView Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        # Скачиваем и распаковываем WebView2 SDK
        Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/Microsoft.Web.WebView2" -OutFile "webview2.zip"
        Expand-Archive -Path "webview2.zip" -DestinationPath "webview2-sdk"
        # Скачиваем и распаковываем WIL
        Invoke-WebRequest -Uri "https://github.com/microsoft/wil/archive/refs/heads/master.zip" -OutFile "wil.zip"
        Expand-Archive -Path "wil.zip" -DestinationPath "wil"
        # Копируем заголовочные файлы в нужные директории
        New-Item -ItemType Directory -Path "deps" -Force
        Copy-Item -Path "webview2-sdk/build/native/include/*" -Destination "deps/" -Recurse
        Copy-Item -Path "wil/wil-master/include/*" -Destination "deps/" -Recurse

    - name: List files (Unix)
      if: runner.os != 'Windows'
      run: |
        ls -la
        ls -la sdk/
        ls -la WDL/

    - name: List files (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Get-ChildItem
        Get-ChildItem sdk/
        Get-ChildItem WDL/
        Get-ChildItem deps/ -Recurse

    - name: Find SDK files (Unix)
      if: runner.os != 'Windows'
      run: find . -name "reaper_plugin_functions.h" -o -name "swell.h"

    - name: Find SDK files (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Include "reaper_plugin_functions.h", "swell.h" | Select-Object -ExpandProperty FullName

    - name: Configure CMake (Unix)
      if: runner.os != 'Windows'
      run: cmake --preset macos-universal

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=./deps

    - name: Build (Unix)
      if: runner.os != 'Windows'
      run: cmake --build --preset macos-universal

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: cmake --build build --config Release

    - name: List build artifacts (Unix)
      if: runner.os != 'Windows'
      run: ls -la build/

    - name: List build artifacts (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: Get-ChildItem build/ -Recurse

    - name: Rename macOS library
      if: runner.os != 'Windows'
      run: |
        mv build/libreaper_webview.dylib build/reaper_webview.dylib

    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: reaper-webview-macos-universal
        path: build/reaper_webview.dylib
        if-no-files-found: error
        retention-days: 7

    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: reaper-webview-windows-x64
        path: build/Release/reaper_webview.dll
        if-no-files-found: error
        retention-days: 7