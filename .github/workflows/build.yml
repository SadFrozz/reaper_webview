name: Build WebView Plugin

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
      fail-fast: false  # Не останавливать все jobs если одна упала
    runs-on: ${{ matrix.os }}
    continue-on-error: true  # Продолжать даже при ошибке

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Ensure Python (macOS)
      if: runner.os == 'macOS'
      run: python3 --version

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      shell: pwsh
      timeout-minutes: 10
      run: |
        # Скачиваем и распаковываем WebView2 SDK
        Write-Host "Downloading WebView2 SDK..."
        Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/Microsoft.Web.WebView2" -OutFile "webview2.zip" -TimeoutSec 300
        Expand-Archive -Path "webview2.zip" -DestinationPath "webview2-sdk" -Force
        
        # Скачиваем и распаковываем WIL
        Write-Host "Downloading WIL..."
        Invoke-WebRequest -Uri "https://github.com/microsoft/wil/archive/refs/heads/master.zip" -OutFile "wil.zip" -TimeoutSec 300
        Expand-Archive -Path "wil.zip" -DestinationPath "wil" -Force
        
        # Копируем заголовочные файлы в нужные директории
        New-Item -ItemType Directory -Path "deps" -Force
        Copy-Item -Path "webview2-sdk/build/native/include/*" -Destination "deps/" -Recurse -Force
        Copy-Item -Path "wil/wil-master/include/*" -Destination "deps/" -Recurse -Force

    - name: Configure CMake (Unix)
      if: runner.os != 'Windows'
      run: cmake --preset macos-universal

    - name: Check Windows dependencies
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "Checking WebView2 headers..."
        if (Test-Path "deps/WebView2.h") {
          Write-Host "✓ WebView2.h found"
        } else {
          Write-Host "✗ WebView2.h missing"
          exit 1
        }
        
        Write-Host "Checking WIL headers..."
        if (Test-Path "deps/wil") {
          Write-Host "✓ WIL headers found"
        } else {
          Write-Host "✗ WIL headers missing"
          exit 1
        }

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_LOG=OFF

    - name: Build (Unix)
      if: runner.os != 'Windows'
      run: cmake --build --preset macos-universal --target reaper_webview reaper_webview_debug

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: cmake --build build --config Release --target reaper_webview reaper_webview_debug

    # --- WINDOWS ARTIFACT ---
    - name: Prepare Windows Artifact
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $loader = "webview2-sdk/runtimes/win-x64/native/WebView2Loader.dll"
        if (Test-Path $loader) {
          Write-Host "Copying WebView2Loader.dll to build/Release/"
          Copy-Item -Path $loader -Destination "build/Release/" -Force
        } else {
          Write-Host "WebView2Loader.dll not found (likely static linking). Skipping."
        }
        
    - name: Upload Windows artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: reaper-webview-windows-x64
        path: |
          build/Release/reaper_webview.dll
          build/Release/reaper_webview_debug.dll
          build/Release/WebView2Loader.dll
        if-no-files-found: warn
        retention-days: 7

    # --- MACOS ARTIFACT ---
    - name: Prepare macOS Artifact
      if: runner.os == 'macOS'
      run: |
        mv build/libreaper_webview.dylib build/reaper_webview.dylib 2>/dev/null || true
        mv build/libreaper_webview_debug.dylib build/reaper_webview_debug.dylib 2>/dev/null || true

    - name: Upload macOS artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: reaper-webview-macos-universal
        path: |
          build/reaper_webview.dylib
          build/reaper_webview_debug.dylib
        if-no-files-found: error
        retention-days: 7

  release-from-tag:
    name: Create Release from Tag
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: reaper-webview-windows-x64
          path: artifacts/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: reaper-webview-macos-universal
          path: artifacts/macos

      - name: Repackage artifacts
        run: |
          set -e
          mkdir dist
          cd artifacts/windows
          zip -r ../../dist/reaper_webview_windows.zip .
          cd ../../artifacts/macos
          zip -r ../../dist/reaper_webview_macos.zip .
          cd ../../dist
          sha256sum * > SHA256SUMS.txt || shasum -a 256 * > SHA256SUMS.txt

      - name: Generate Release Notes
        id: notes
        run: |
          set -e
          TAG="${GITHUB_REF_NAME}" # e.g. v0.1.0
          CHANGELOG_SECTION=""
          if [ -f CHANGELOG.md ]; then
            # Extract lines from the matching version header until next version header or EOF
            # Supports headings like '## v0.1.0' optionally followed by status words.
            CHANGELOG_SECTION=$(awk -v tag="$TAG" 'BEGIN{found=0} /^## / { if(found){ exit } } $0 ~ "^## "tag { found=1; next } found { print }' CHANGELOG.md | sed '/^---$/d')
          fi
          if [ -z "$CHANGELOG_SECTION" ]; then
            CHANGELOG_SECTION="(No specific changelog section found for $TAG)"
          fi

          # Detect prerelease markers (Beta/Alpha) in the CHANGELOG header line for this tag
          PRERELEASE=false
          if grep -E "^## ${TAG} (Alpha|Beta)" CHANGELOG.md >/dev/null 2>&1; then
            PRERELEASE=true
          fi

          {
            echo "release_body<<EOF"
            echo "Reaper WebView Extension"
            echo ""
            echo "Tag: $TAG"
            if [ "$PRERELEASE" = true ]; then echo "(Pre-release)"; fi
            echo ""
            echo "Changelog:"; echo ""; echo "$CHANGELOG_SECTION" | sed 's/^/  /'
            echo ""
            echo "Artifacts:"
            echo "- reaper_webview_windows.zip (Release + Debug DLLs + optional WebView2Loader)"
            echo "- reaper_webview_macos.zip (Universal Release + Debug dylibs)"
            echo ""
            echo "SHA256 sums included in SHA256SUMS.txt"
            echo ""
            echo "Install: copy the appropriate binary into REAPER UserPlugins (see README)."
            echo "EOF"
          } >> $GITHUB_OUTPUT

          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Reaper WebView ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.release_body }}
          draft: false
          prerelease: ${{ steps.notes.outputs.prerelease }}
          files: |
            dist/reaper_webview_windows.zip
            dist/reaper_webview_macos.zip
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
